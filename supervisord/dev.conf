[unix_http_server]
file=%(ENV_PWD)s/supervisor.sock   ; the path to the socket file

[supervisord]
nodaemon=true               ; start in foreground if true; default false
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=debug                ; log level; default info; others: debug,warn,trace
logfile=%(ENV_PWD)s/supervisord.log ; main log file; default $CWD/supervisord.log
pidfile=%(ENV_PWD)s/supervisord.pid ; supervisord pidfile; default supervisord.pid
childlogdir=%(ENV_PWD)s            ; where child log files will live

; The rpcinterface:supervisor section must remain in the config file for
; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
; added by defining them in separate [rpcinterface:x] sections.

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix://%(ENV_PWD)s/supervisor.sock ; use a unix:// URL  for a unix socket

[program:rqworker_default]
command=/usr/bin/env python manage.py rqworker default
redirect_stderr=true
stopasgroup=true
numprocs=1
process_name=rqworker_default

[program:rqworker_low]
command=/usr/bin/env python manage.py rqworker low
redirect_stderr=true
stopasgroup=true
numprocs=1
process_name=rqworker_low

[program:rqworker_tensorboard]
command=/usr/bin/env python manage.py rqworker tensorboard
redirect_stderr=true
stopasgroup=true
numprocs=1
process_name=rqworker_tensorboard

[program:app_server]
command=/usr/bin/env python manage.py runserver localhost:5000
redirect_stderr=true
stopasgroup=true
process_name=app_server

[program:frontend_server]
command=/usr/bin/env npm start
directory=%(ENV_PWD)s/frontend
redirect_stderr=true
stopasgroup=true
process_name=frontend_server
